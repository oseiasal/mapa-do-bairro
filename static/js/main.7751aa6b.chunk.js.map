{"version":3,"sources":["Components/Map.js","Components/PlaceItem.js","Components/Menu.js","data/locations.js","App.js","serviceWorker.js","index.js"],"names":["Map","react_default","a","createElement","id","role","aria-label","className","PlaceItem","_ref","openInfoWindow","infoWindow","marker","callOpenInfoWindow","context","map","tabIndex","onClick","bind","onKeyPress","title","Menu","openMenu","updateQuery","query","marcFiltered","markers","type","placeholder","onChange","event","target","value","length","index","Components_PlaceItem","key","Places","location","lat","lng","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initMap","document","getElementsByClassName","addEventListener","classList","toggle","self","assertThisInitialized","window","google","maps","InfoWindow","setState","getElementById","center","zoom","mapTypeControl","bounds","LatLngBounds","_loop","i","position","state","locations","squareId","Marker","animation","Animation","DROP","addListener","push","extend","marc","arguments","undefined","filter","marcador","toLowerCase","indexOf","setTimeout","renderMarkers","setMap","createScript","item","Components_Menu","Components_Map","setContent","open","setAnimation","BOUNCE","setCenter","getPosition","panBy","close","setMarker","chamaApiFourSquare","_this2","fetch","then","response","json","dados","meta","code","errorDetail","venue","local","categories","pluralName","street","address","hereNoe","likes","summary","telefone","contact","formattedPhone","site","url","catch","erro","console","log","src","getElementsByTagName","script","async","defer","parentNode","insertBefore","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","URL","process","href","origin","concat","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7751aa6b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Map = () => {\r\n\r\n    return (\r\n        <main>\r\n            <div id=\"map\" role=\"application\" aria-label=\"Mapa da Cidade de Guarulhos\" className=\"map\"></div>\r\n        </main>\r\n     )\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\n\r\nconst PlaceItem = ({openInfoWindow, infoWindow, marker}) => {\r\n\r\n    // Esta função chama o InfoWindow\r\n    const callOpenInfoWindow = (context) => {\r\n        openInfoWindow(marker, infoWindow, marker.map);\r\n\r\n    }\r\n\r\n        return (\r\n            <li role=\"button\" tabIndex=\"0\" onClick={callOpenInfoWindow.bind(this)} onKeyPress={callOpenInfoWindow.bind(this)}>\r\n                {marker.title}\r\n            </li>\r\n        )\r\n}\r\n\r\nexport default PlaceItem\r\n","import React from 'react';\r\nimport  PlaceItem  from './PlaceItem';\r\nimport '../App.css';\r\n\r\nconst Menu = ({openMenu, updateQuery, query, marcFiltered, infoWindow, openInfoWindow, markers}) => {\r\n\r\n        return (\r\n            <div className=\"menu-option\">\r\n                <div className=\"search-container\">\r\n                    <div tabIndex=\"0\"  className=\"menuToggle\" onKeyPress={openMenu} >\r\n                        <input  tabIndex=\"-1\" className=\"checkbox\" type=\"checkbox\"></input>\r\n\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <div></div>\r\n\r\n                    </div>\r\n\r\n                    <input aria-label=\"Digite o nome do lugar\" placeholder=\"Digite o nome do lugar\" className=\"show-markers showing\" type=\"text\"\r\n                onChange={(event) => {updateQuery(event.target.value); }}>\r\n                    </input>\r\n\r\n                    <div className=\"list showing\">\r\n                        <ul>\r\n                        {query.length > 0 ? (marcFiltered.map((marker, index) => {\r\n                            return <PlaceItem\r\n                            infoWindow={infoWindow}\r\n                            key={index}\r\n                            marker={marker}\r\n                            openInfoWindow={openInfoWindow}\r\n                            />\r\n                        })) : (markers.map((marker, index) => {\r\n                            return <PlaceItem\r\n                            infoWindow={infoWindow}\r\n                            key={index}\r\n                            marker={marker}\r\n                            openInfoWindow={openInfoWindow}\r\n                            />\r\n                        }))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Menu;\r\n","export const Places = [{\r\n    title: 'CIEE',\r\n    location: {\r\n        lat: -23.467149,\r\n        lng: -46.527667\r\n    },\r\n    id:'4f47974ce4b0683d4e7d87cf'\r\n}, {\r\n    title: 'Maria Cereja',\r\n    location: {\r\n        lat: -23.4610524,\r\n        lng: -46.5302547\r\n    },\r\n    id:'4b2ee880f964a52023e824e3'\r\n}, {\r\n    title: 'Bosque Maia',\r\n    location: {\r\n        lat: -23.4575191,\r\n        lng: -46.5298792\r\n    },\r\n    id:'4bb2aec24019a5937f3637b8'\r\n}, {\r\n    title: 'Wow Burger',\r\n    location: {\r\n        lat: -23.4577258,\r\n        lng: -46.5302654\r\n    },\r\n    id:'4b2ed079f964a52009e724e3'\r\n},\r\n{\r\n    title: 'Winners Academia',\r\n    location: {\r\n        lat: -23.4599304,\r\n        lng: -46.536059\r\n    },\r\n    id:'4d7b98e96152b60cdc578126'\r\n}, {\r\n    title: 'ACM',\r\n    location: {\r\n        lat: -23.4635817,\r\n        lng: -46.5338167\r\n    },\r\n    id:'4c7c43107a856dcbb7cde1a7'\r\n}]\r\n","import React, { Component } from 'react';\r\nimport Map from './Components/Map';\r\nimport Menu from './Components/Menu';\r\nimport { Places } from './data/locations';\r\nimport { PrivateKey } from './data/UserKey';\r\nimport { ClienteID } from './data/UserKey';\r\nimport { ClientSecret } from './data/UserKey';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'locations': Places,\r\n            'map': {},\r\n            'markers': [],\r\n            'query': '',\r\n            'infoWindow': ''\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        window.initMap = this.initMap;\r\n        this.createScript('https://maps.googleapis.com/maps/api/js?key=' + PrivateKey + '&callback=initMap');\r\n    }\r\n\r\n    // Esta função faz altera as classes do menu para exibir as listas\r\n    openMenu(){\r\n        document.getElementsByClassName('list')[0].classList.toggle('showing');\r\n        document.getElementsByClassName('show-markers')[0].classList.toggle('showing');\r\n    }\r\n\r\n    // chamar a função initMap\r\n    initMap = () => {\r\n\r\n        document.getElementsByClassName('checkbox')[0].addEventListener('click', () => {\r\n            document.getElementsByClassName('list')[0].classList.toggle('showing');\r\n            document.getElementsByClassName('show-markers')[0].classList.toggle('showing');\r\n        })\r\n\r\n        let self = this;\r\n\r\n        let infoWindow = new window.google.maps.InfoWindow();\r\n        this.setState({'infoWindow': infoWindow})\r\n\r\n        let map = new window.google.maps.Map(document.getElementById('map'), {\r\n            center: { lat: -23.4671489, lng: -46.5276668},\r\n            zoom: 15,\r\n            mapTypeControl: false\r\n        });\r\n        this.setState({'map': map});\r\n\r\n        let bounds = new window.google.maps.LatLngBounds();\r\n\r\n        for (let i = 0; i < this.state.locations.length; i++) {\r\n            let position = this.state.locations[i].location;\r\n            let title = this.state.locations[i].title;\r\n            let squareId = this.state.locations[i].id;\r\n\r\n            // Criar um marcador por localização, e colocá-los em uma vetor de marcadores.\r\n            let marker = new window.google.maps.Marker({\r\n                squareId: squareId,\r\n                map: map,\r\n                position: position,\r\n                title: title,\r\n                animation: window.google.maps.Animation.DROP,\r\n                id: i\r\n            });\r\n\r\n            // Adicionar escuta de click para abrir a infoWindow\r\n            marker.addListener('click', function() {\r\n                self.openInfoWindow(this, self.state.infoWindow, this.map);\r\n            });\r\n\r\n            // Adicionar os marcadores ao state\r\n            this.setState( (markers) => {\r\n                markers = this.state.markers.push(marker);\r\n                return markers;\r\n            });\r\n\r\n            bounds.extend(this.state.markers[i].position);\r\n        }\r\n    }\r\n\r\n    // Ao pesquisar os lugares, esta função irá manipular os marcadores no mapa\r\n    renderMarkers(map, marker, query){\r\n\r\n        // Manipula os marcadores para que eles tenham um delay ao serem pesquisados\r\n        setTimeout(function () {\r\n            if (query.length === 0) {\r\n                marker.map(item => {\r\n                    return item.setMap(map)\r\n                })\r\n            }\r\n        }, 10);\r\n\r\n        // Filtra os marcadores baseado no texto da query (state)\r\n        marker.map(marcador => {\r\n            if (marcador.title !== (query.toLowerCase().indexOf(query.toLowerCase()) > -1)) {\r\n                return marker.map(item => {\r\n                    return item.setMap(map)\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    // Esta função atualiza a query\r\n    updateQuery = (query, marc = []) => {\r\n        let self = this;\r\n        this.setState({query})\r\n        this.state.markers.filter(marcador => {\r\n            return marcador.title.toLowerCase().indexOf(query.toLowerCase()) > -1\r\n\r\n        }).map(marcador => {\r\n            return marc.push(marcador);\r\n        });\r\n\r\n        this.setState({marcFiltered: marc});\r\n\r\n        // A função renderMarkers só será iniciada após os 100ms\r\n        setTimeout(function () {\r\n            self.renderMarkers(self.state.map, self.state.marcFiltered, self.state.query)\r\n        }, 100);\r\n\r\n        this.state.markers.map(a => {\r\n            return a.setMap(null)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <header className=\"header\"> Mapa do Bairro </header>\r\n             <nav>\r\n             <Menu\r\n                openMenu={this.openMenu.bind(this)}\r\n                query={this.state.query}\r\n                marcFiltered={this.state.marcFiltered}\r\n                updateQuery={this.updateQuery.bind(this)}\r\n                openInfoWindow={this.openInfoWindow.bind(this)}\r\n                infoWindow={this.state.infoWindow}\r\n                markers={this.state.markers}\r\n                map={this.state.map}\r\n                />\r\n                </nav>\r\n\r\n                <Map />\r\n\r\n            </div>\r\n            )\r\n        }\r\n\r\n        // Esta função abre as InfoWindow dos marcadores\r\n        openInfoWindow(marker, infoWindow, map) {\r\n\r\n            if (infoWindow.marker !== marker) {\r\n                infoWindow.marker = marker;\r\n                infoWindow.setContent('<div>' + marker.title + '</div>');\r\n                infoWindow.open(map, marker);\r\n                marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n                this.state.map.setCenter(marker.getPosition());\r\n                this.state.map.panBy(0, 30);\r\n\r\n                // Após 1,5 segundos, a animação do marcador é desativada\r\n                setTimeout(function () {\r\n                    infoWindow.marker.setAnimation(null);\r\n                }, 1500);\r\n\r\n                infoWindow.addListener('closeclick', () => {\r\n                    infoWindow.close();\r\n                    infoWindow.marker.setMarker = null;\r\n                });\r\n\r\n                this.chamaApiFourSquare(marker);\r\n            }\r\n        }\r\n\r\n// A função pega a ID do marcador e passa para a url do foursquare para obter dados sobre o lugar\r\n        chamaApiFourSquare(marker){\r\n            fetch('https://api.foursquare.com/v2/venues/'+ marker.squareId +'?&client_id='+ ClienteID +'&client_secret='+ ClientSecret +'&v=20131212')\r\n            .then((response) => {\r\n                return response.json().then(dados => {\r\n                    if (dados.meta.code !== 200) {\r\n                        let title = '<div><strong>' + marker.title + '</strong></div></br>';\r\n                        let error = dados.meta.errorDetail;\r\n                        return this.state.infoWindow.setContent(title + '<div>Loading... :)</div>')\r\n\r\n                    }\r\n\r\n                    if (dados.response.venue !== undefined) {\r\n                        let title = '<div style=\"font-size:18px\">' + '<b>'+ marker.title + '</b></div>'\r\n                        let local = '<div> <b>Categoria</b>: ' + dados.response.venue.categories[0].pluralName + '</div>'\r\n                        let street = '<div> <b>Endereço:</b> ' + (dados.response.venue.location.address === undefined ? \"Rua sem nome\" : dados.response.venue.location.address) + '</div>'\r\n                        let hereNoe = '<div> <b>Gostaram do lugar:</b> ' + (dados.response.venue.likes.summary === undefined ? 'Sem informação :(': dados.response.venue.likes.summary) + '</div>'\r\n                        let telefone = '<div> <b>Telefone:</b> ' + (dados.response.venue.contact.formattedPhone === undefined ? 'Sem telefone' : dados.response.venue.contact.formattedPhone) + '</div>'\r\n                        let site = '<div> <b>Site:</b> ' + (dados.response.venue.url === undefined ? 'indisponível no momento' : '<a href=' + dados.response.venue.url + '>'+dados.response.venue.url+'</a>' + '</div>')\r\n                        let foursquare = '<div><code> Elaborado com Api do 4Square</code></div>'\r\n                        return this.state.infoWindow.setContent(title + '<br>' + local + street + hereNoe + telefone +'<br>'+ site +'<br>' +foursquare)\r\n                    }\r\n                }).catch((erro) => {\r\n                    return console.log(erro);\r\n                })\r\n            }).catch((erro) => {\r\n                return console.log(erro);\r\n            })\r\n        }\r\n\r\n        // Função criada para colocar o script do google no html\r\n        createScript(src) {\r\n            // Selecionar ponto de referencia\r\n            let index = window.document.getElementsByTagName(\"script\")[0];\r\n            // criar o script\r\n            let script = window.document.createElement(\"script\");\r\n            // definir os atributos\r\n            script.src = src;\r\n            script.async = true;\r\n            script.defer = true;\r\n\r\n            // inserir antes do primeiro script\r\n            index.parentNode.insertBefore(script, index);\r\n        }\r\n    }\r\n\r\n    export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}