{"version":3,"sources":["Components/Map.js","Components/PlaceItem.js","catch/ErrorBoundary.js","Components/Menu.js","data/locations.js","App.js","serviceWorker.js","index.js"],"names":["Map","react_default","a","createElement","id","role","aria-label","className","PlaceItem","_ref","openInfoWindow","infoWindow","marker","callOpenInfoWindow","context","map","tabIndex","onClick","bind","onKeyPress","title","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","errorInfo","setState","style","whiteSpace","toString","componentStack","children","React","Component","Menu","openMenu","updateQuery","query","marcFiltered","markers","catch_ErrorBoundary","type","placeholder","onChange","event","target","value","length","index","key","Components_PlaceItem","Places","location","lat","lng","App","initMap","document","getElementsByClassName","addEventListener","classList","toggle","e","console","log","self","assertThisInitialized","window","google","maps","InfoWindow","maxWidth","maxHeight","getElementById","center","zoom","mapTypeControl","bounds","LatLngBounds","_loop","i","position","locations","squareId","Marker","animation","Animation","DROP","addListener","push","extend","marc","arguments","undefined","filter","marcador","toLowerCase","indexOf","setTimeout","renderMarkers","setMap","createScript","gm_authFailure","alert","item","close","setContent","open","setAnimation","BOUNCE","setCenter","getPosition","panBy","setMarker","callFoursSquareInfos","_this2","fetch","then","response","json","dados","meta","code","venue","local","categories","pluralName","street","address","hereNoe","likes","summary","telefone","contact","formattedPhone","site","url","catch","erro","src","getElementsByTagName","script","async","defer","parentNode","insertBefore","Components_Menu","Components_Map","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","URL","process","href","origin","concat","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d996f0ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Map = () => {\r\n\r\n    return (\r\n        <main>\r\n            <div id=\"map\" role=\"application\" aria-label=\"Mapa da Cidade de Guarulhos\" className=\"map\"></div>\r\n        </main>\r\n     )\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\n\r\nconst PlaceItem = ({openInfoWindow, infoWindow, marker}) => {\r\n\r\n    // Esta função chama o InfoWindow\r\n    const callOpenInfoWindow = (context) => {\r\n        openInfoWindow(marker, infoWindow, marker.map);\r\n\r\n    }\r\n\r\n        return (\r\n            <li role=\"button\" tabIndex=\"0\" onClick={callOpenInfoWindow.bind(this)} onKeyPress={callOpenInfoWindow.bind(this)}>\r\n                {marker.title}\r\n            </li>\r\n        )\r\n}\r\n\r\nexport default PlaceItem\r\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    })\r\n    // You can also log error messages to an error reporting service here\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      // Error path\r\n      return (\r\n        <div>\r\n          <h2>Something went wrong.</h2>\r\n          <details style={{ whiteSpace: 'pre-wrap' }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport  PlaceItem  from './PlaceItem';\r\nimport ErrorBoundary from '../catch/ErrorBoundary';\r\nimport '../App.css';\r\n\r\nconst Menu = ({openMenu, updateQuery, query, marcFiltered, infoWindow, openInfoWindow, markers}) => {\r\n\r\n        return (\r\n            <ErrorBoundary>\r\n            <div className=\"menu-option\">\r\n                <div className=\"search-container\">\r\n                    <div tabIndex=\"0\"  className=\"menuToggle\" onKeyPress={openMenu} >\r\n                        <input  tabIndex=\"-1\" className=\"checkbox\" type=\"checkbox\"></input>\r\n\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <div></div>\r\n\r\n                    </div>\r\n\r\n                    <input aria-label=\"Digite o nome do lugar\" placeholder=\"Digite o nome do lugar\" className=\"show-markers showing\" type=\"text\"\r\n                onChange={(event) => {updateQuery(event.target.value); }}>\r\n                    </input>\r\n\r\n                    <div className=\"list showing\">\r\n                        <ul>\r\n                        {query.length > 0 ? (marcFiltered.map((marker, index) => {\r\n                            return <ErrorBoundary key={index}><PlaceItem\r\n                            infoWindow={infoWindow}\r\n                            key={index}\r\n                            marker={marker}\r\n                            openInfoWindow={openInfoWindow}\r\n                            /></ErrorBoundary>\r\n                        })) : (markers.map((marker, index) => {\r\n                            return <ErrorBoundary key={index}><PlaceItem\r\n                            infoWindow={infoWindow}\r\n                            key={index}\r\n                            marker={marker}\r\n                            openInfoWindow={openInfoWindow}\r\n                            /></ErrorBoundary>\r\n                        }))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </ErrorBoundary>\r\n        )\r\n    }\r\n\r\nexport default Menu;\r\n","export const Places = [{\r\n    title: 'CIEE',\r\n    location: {\r\n        lat: -23.467149,\r\n        lng: -46.527667\r\n    },\r\n    id:'4f47974ce4b0683d4e7d87cf'\r\n}, {\r\n    title: 'Maria Cereja',\r\n    location: {\r\n        lat: -23.4610524,\r\n        lng: -46.5302547\r\n    },\r\n    id:'4b2ee880f964a52023e824e3'\r\n}, {\r\n    title: 'Bosque Maia',\r\n    location: {\r\n        lat: -23.4575191,\r\n        lng: -46.5298792\r\n    },\r\n    id:'4bb2aec24019a5937f3637b8'\r\n}, {\r\n    title: 'Wow Burger',\r\n    location: {\r\n        lat: -23.4577258,\r\n        lng: -46.5302654\r\n    },\r\n    id:'4b2ed079f964a52009e724e3'\r\n},\r\n{\r\n    title: 'Winners Academia',\r\n    location: {\r\n        lat: -23.4599304,\r\n        lng: -46.536059\r\n    },\r\n    id:'4d7b98e96152b60cdc578126'\r\n}, {\r\n    title: 'ACM',\r\n    location: {\r\n        lat: -23.4635817,\r\n        lng: -46.5338167\r\n    },\r\n    id:'4c7c43107a856dcbb7cde1a7'\r\n}]\r\n","import React, { Component } from 'react';\r\nimport Map from './Components/Map';\r\nimport Menu from './Components/Menu';\r\nimport { Places } from './data/locations';\r\nimport { PrivateKey } from './data/UserKey';\r\nimport ErrorBoundary from './catch/ErrorBoundary';\r\nimport { ClienteID } from './data/UserKey';\r\nimport { ClientSecret } from './data/UserKey';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'locations': Places,\r\n            'map': {},\r\n            'markers': [],\r\n            'query': '',\r\n            'infoWindow': ''\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        window.initMap = this.initMap;\r\n        this.createScript('https://maps.googleapis.com/maps/api/js?key=' + PrivateKey + '&callback=initMap');\r\n        window.gm_authFailure = this.gm_authFailure;\r\n    }\r\n\r\n     gm_authFailure() {\r\n        alert(\"Estamos com um problema para carregar o mapa.\\nTente novamente mais tarde.\");\r\n    }\r\n\r\n    // Esta função faz altera as classes do menu para exibir as listas\r\n    openMenu(){\r\n\r\n        try {\r\n            document.getElementsByClassName('list')[0].classList.toggle('showing');\r\n            document.getElementsByClassName('show-markers')[0].classList.toggle('showing');\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    // chamar a função initMap\r\n    initMap = () => {\r\n\r\n        try {\r\n            document.getElementsByClassName('checkbox')[0].addEventListener('click', () => {\r\n                document.getElementsByClassName('list')[0].classList.toggle('showing');\r\n                document.getElementsByClassName('show-markers')[0].classList.toggle('showing');\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n        let self = this;\r\n\r\n        let infoWindow = new window.google.maps.InfoWindow({maxWidth: 350, maxHeight: 400});\r\n        this.setState({'infoWindow': infoWindow})\r\n\r\n        let map = new window.google.maps.Map(document.getElementById('map'), {\r\n            center: { lat: -23.4671489, lng: -46.5276668},\r\n            zoom: 15,\r\n            mapTypeControl: false\r\n        });\r\n        this.setState({'map': map});\r\n\r\n        let bounds = new window.google.maps.LatLngBounds();\r\n\r\n        for (let i = 0; i < this.state.locations.length; i++) {\r\n            let position = this.state.locations[i].location;\r\n            let title = this.state.locations[i].title;\r\n            let squareId = this.state.locations[i].id;\r\n\r\n            // Criar um marcador por localização, e colocá-los em uma vetor de marcadores.\r\n            let marker = new window.google.maps.Marker({\r\n                squareId: squareId,\r\n                map: map,\r\n                position: position,\r\n                title: title,\r\n                animation: window.google.maps.Animation.DROP,\r\n                id: i\r\n            });\r\n\r\n            // Adicionar escuta de click para abrir a infoWindow\r\n            marker.addListener('click', function() {\r\n                self.openInfoWindow(this, self.state.infoWindow, this.map);\r\n            });\r\n\r\n            // Adicionar os marcadores ao state\r\n            this.setState( (markers) => {\r\n                markers = this.state.markers.push(marker);\r\n                return markers;\r\n            });\r\n\r\n            bounds.extend(this.state.markers[i].position);\r\n        }\r\n\r\n    }\r\n\r\n    // Ao pesquisar os lugares, esta função irá manipular os marcadores no mapa\r\n    renderMarkers(map, marker, query){\r\n\r\n        // Manipula os marcadores para que eles tenham um delay ao serem pesquisados\r\n        setTimeout(function () {\r\n            if (query.length === 0) {\r\n                marker.map(item => {\r\n                    return item.setMap(map)\r\n                })\r\n            }\r\n        }, 10);\r\n\r\n        // Filtra os marcadores baseado no texto da query (state)\r\n        marker.map(marcador => {\r\n            if (marcador.title !== (query.toLowerCase().indexOf(query.toLowerCase()) > -1)) {\r\n                return marker.map(item => {\r\n                    return item.setMap(map)\r\n                });\r\n            }\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    // Esta função atualiza a query\r\n    updateQuery = (query, marc = []) => {\r\n        let self = this;\r\n        this.setState({query})\r\n        this.state.markers.filter(marcador => {\r\n            return marcador.title.toLowerCase().indexOf(query.toLowerCase()) > -1\r\n\r\n        }).map(marcador => {\r\n            return marc.push(marcador);\r\n        });\r\n\r\n        this.setState({marcFiltered: marc});\r\n\r\n        // A função renderMarkers só será iniciada após os 100ms\r\n        setTimeout(function () {\r\n            self.renderMarkers(self.state.map, self.state.marcFiltered, self.state.query)\r\n        }, 100);\r\n\r\n        this.state.markers.map(a => {\r\n            return a.setMap(null)\r\n        })\r\n\r\n    }\r\n\r\n    // Esta função abre as InfoWindow dos marcadores\r\n    openInfoWindow(marker, infoWindow, map) {\r\n        infoWindow.marker = null;\r\n        infoWindow.close();\r\n\r\n        if (infoWindow.marker !== marker) {\r\n            infoWindow.marker = marker;\r\n            infoWindow.setContent('<div>' + marker.title + '</div>');\r\n            infoWindow.open(map, marker);\r\n            marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n            this.state.map.setCenter(marker.getPosition());\r\n            this.state.map.panBy(0, 30);\r\n\r\n            // Após 1,5 segundos, a animação do marcador é desativada\r\n            setTimeout(function () {\r\n                infoWindow.marker.setAnimation(null);\r\n            }, 1500);\r\n\r\n            infoWindow.addListener('closeclick', () => {\r\n                infoWindow.close();\r\n                infoWindow.marker.setMarker = null;\r\n            });\r\n            this.callFoursSquareInfos(marker);\r\n        }\r\n    }\r\n\r\n    // A função pega a ID do marcador e passa para a url do foursquare para obter dados sobre o lugar\r\n\r\n    callFoursSquareInfos(marker){\r\n        fetch('https://api.foursquare.com/v2/venues/'+ marker.squareId +'?&client_id='+ ClienteID +'&client_secret='+ ClientSecret +'&v=20131212')\r\n        .then((response) => {\r\n            return response.json().then(dados => {\r\n                if (dados.meta.code !== 200) {\r\n                    let title = '<div><strong>' + marker.title + '</strong></div></br>';\r\n                    return this.state.infoWindow.setContent(title + '<div>Sem informações sobre o local, por enquanto. <br> Tente novamente mais tarde.</div>')\r\n\r\n                }\r\n\r\n                if (dados.response.venue !== undefined) {\r\n                    let title = '<div style=\"font-size:18px\"><b>'+ marker.title + '</b></div>'\r\n                    let local = '<div> <b>Categoria</b>: ' + dados.response.venue.categories[0].pluralName + '</div>'\r\n                    let street = '<div> <b>Endereço:</b> ' + (dados.response.venue.location.address === undefined ? \"Rua sem nome\" : dados.response.venue.location.address) + '</div>'\r\n                    let hereNoe = '<div> <b>Gostaram do lugar:</b> ' + (dados.response.venue.likes.summary === undefined ? 'Sem informação': dados.response.venue.likes.summary) + '</div>'\r\n                    let telefone = '<div> <b>Telefone:</b> ' + (dados.response.venue.contact.formattedPhone === undefined ? 'Sem telefone' : dados.response.venue.contact.formattedPhone) + '</div>'\r\n                    let site = '<div> <b>Site:</b> ' + (dados.response.venue.url === undefined ? 'indisponível no momento <br>' : '<a href=' + dados.response.venue.url + '>'+dados.response.venue.url+'</a></div>')\r\n                    let foursquare = '<div><code> Elaborado com Api do 4Square</code></div>'\r\n                    return this.state.infoWindow.setContent(title + '<br>' + local + street + hereNoe + telefone + site +'<br>' + foursquare)\r\n                }\r\n            }).catch((erro) => {\r\n                return window.alert(\"Algo deu errado.\\nPor favor, tente novamente mais tarde.\");\r\n            })\r\n        }).catch((erro) => {\r\n            return window.alert(\"Algo deu errado.\\n Por favor, tente novamente mais tarde.\");\r\n        })\r\n    }\r\n\r\n    // Função criada para colocar o script do google no html\r\n    createScript(src) {\r\n        // Selecionar ponto de referencia\r\n        let index = window.document.getElementsByTagName(\"script\")[0];\r\n        // criar o script\r\n        let script = window.document.createElement(\"script\");\r\n        // definir os atributos\r\n        script.src = src;\r\n        script.async = true;\r\n        script.defer = true;\r\n\r\n        // inserir antes do primeiro script\r\n        index.parentNode.insertBefore(script, index);\r\n    }\r\n\r\n    render() {\r\n            return (\r\n                <div className=\"container\">\r\n                <header className=\"header\"> Mapa do Bairro </header>\r\n                 <nav>\r\n                 <ErrorBoundary>\r\n                 <Menu\r\n                 openMenu={this.openMenu.bind(this)}\r\n                 query={this.state.query}\r\n                 marcFiltered={this.state.marcFiltered}\r\n                 updateQuery={this.updateQuery.bind(this)}\r\n                 openInfoWindow={this.openInfoWindow.bind(this)}\r\n                 infoWindow={this.state.infoWindow}\r\n                 markers={this.state.markers}\r\n                 map={this.state.map}\r\n                 />\r\n                </ErrorBoundary>\r\n                    </nav>\r\n\r\n                    <ErrorBoundary>\r\n                    <Map />\r\n                    </ErrorBoundary>\r\n\r\n                </div>\r\n                )\r\n            }\r\n    }\r\n\r\n    export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ErrorBoundary from './catch/ErrorBoundary';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ErrorBoundary><App /></ErrorBoundary>, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}